#trip{"ng-controller" => "tripCtrl", "ng-init" => "trip = #{@trip}"}
  #modal-delete-trip.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modal-delete-title", :role => "dialog", :tabindex => "-1"}
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{"data-dismiss" => "modal", :type => "button"}
            %span{"aria-hidden" => "true"} ×
            %span.sr-only Close
          %h4#modal-delete-title.modal-title= t("DeleteTripTitle")
        .modal-body= t("AreYouSure?")
        .modal-footer
          %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"}= t("Cancel")
          %button.btn.btn-primary#confirm-delete-trip{:type => "button", "ng-click" => "removeTrip()"}= t("Accept")
  .uploader{"nv-file-drop"=>"", "uploader"=>"uploader", "options" => "{url: '/api/t/{{trip.id}}/data/image' }"}
    .box-center
      .box-info
        .show-info
          %h3= t("DragImageHere")
          %input.btn.btn-info{"nv-file-select"=>"","uploader"=>"uploader","type"=>"file", "options" => "{url: '/api/t/{{trip.id}}/data/image' }"}
          %button.btn.btn-danger.cancel= t("Cancel")
  .user-management
    .box-center
      .box-info
        .show-info
          %h3= t("UserManagement")
          %form{"role" => "form"}
            .form-group
              .input-group.input-group-lg
                %span.input-group-addon @
                %input.form-control{:placeholder => "Username", :type => "text","ng-model"=>"search", "id"=>"search", "ng-keyup" => "addUserCanWrite()", "ng-model" => "addUserText"}/
          %div#showit
            %ul.list-group
              %li.list-group-item{"ng-repeat" => "user in usersCanWrite"}
                %span {{user.username}}
                %button.badge{"ng-click" => "deleteUserCanWrite(user.id)"}
                  %span.glyphicon.glyphicon-remove


          %button.btn.btn-danger.cancel= t("Close")
  %section#header{"data-speed" => "6", "data-type" => "background", "ng-style" => "tripBackground"}
    %nav.settings
      - if current_user
        %button.btn.btn-default.favorite{"ng-init" => "favorite = #{@favorite}", "ng-click" => "toggleFavorite()"}
          %i.fa.fa-heart.fa-2x{"ng-show" => "favorite"}
          %i.fa.fa-heart-o.fa-2x{"ng-hide" => "favorite"}
      .btn-group
        %button.btn.btn-default{"aria-expanded" => "false", "data-toggle" => "dropdown", :type => "button"}
          %i.fa.fa-globe.fa-2x{"ng-show" => "trip.visibility == 'public'"}
          %i.fa.fa-eye.fa-2x{"ng-show" => "trip.visibility == 'shared'"}
          %i.fa.fa-eye-slash.fa-2x{"ng-show" => "trip.visibility == 'private'"}
        %ul.dropdown-menu.dropdown-menu-right{:role => "menu"}
          %li
            %a{"ng-click" => "changeVisibility('public')"}
              %i.fa.fa-globe
              = t("Public")
            %a{"ng-click" => "changeVisibility('shared')"}
              %i.fa.fa-eye
              = t("Shared")
            %a{"ng-click" => "changeVisibility('private')"}
              %i.fa.fa-eye-slash
              = t("Private")
      %button.btn.btn-default.change-image
        %i.fa.fa-photo.fa-2x{}
      - if can? :destroy, Trip
        .btn-group
          %button.btn.btn-default.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :type => "button"}
            %i.fa.fa-cogs.fa-fw
          %ul.dropdown-menu.dropdown-menu-right{:role => "menu"}
            %li
              %a.edit-users{"ng-click" => "loadEditors()"}
                %i.fa.fa-group.fa-fw
                = t("ManageUsers")
              %a.delete-trip{"data-target" => "#modal-delete-trip", "data-toggle" => "modal", :type => "button"}
                %i.fa.fa-remove.fa-fw
                = t("DeleteTrip")
      .clear
      %form{"role"=>"form"}
        %input.form-control.sharedkey{"type"=>"text", "ng-hide" => "trip.visibility == 'private'", "value" => "{{sharedUrl}}", "onClick"=>"this.select();", "ng-cloak" => "", "class"=>"ng-cloak"}
    .container-fluid.header-info
      %h1.editable{"ng-model" => "trip.title", "ng-cloak" => "", "class"=>"ng-cloak"} {{trip.title}}
      %button.btn.btn-success.save-title{"type" => "button", "ng-click" => "saveTitle()"}= t("Save")
  / Section 2
  %section#map{"data-speed" => "4", "data-type" => "background", "ng-controller" => "mapCtrl"}
    / #route
    %script{:src => "http://maps.google.com/maps/api/js?libraries=places"}
    %map#route{}
      %marker{"ng-repeat" => "destination in destinations", "title" => "{{destination.name}}", "position" => "{{destination.coordinates}}", "z-index" => "4"}
      %shape#polyline{:geodesic => "true", :name => "polyline", :path => "{{linea}}", "stroke-color" => "#647f46", "stroke-opacity" => "1.0", "stroke-weight" => "4"}
    .panel
      %input#pac-input.controls{:placeholder => "Search Box", :type => "text"}/
      %ul.list-group{"ui-sortable"=>"sortableOptions", "ng-model" => "destinations"}
        %li.list-group-item{"ng-repeat" => "d in destinations"}
          %span.glyphicon.glyphicon-align-justify
          %span.badge.remove-dest{"ng-click" => "removeDest($index)"}
            %span.glyphicon.glyphicon-remove
          %span.badge {{$index+1}}
          {{d.name}}

    %button.show-panel{"style" => "display: block"}
      %span.glyphicon.glyphicon-chevron-down
    %button.hide-panel{"style" => "display: none"}
      %span.glyphicon.glyphicon-chevron-up
  / Section 3
  %section#content{"data-speed" => "2", "data-type" => "background"}
    .container-fluid
      .dates
        .row
          .col-md-6
            %h2
              = t("StartDate")
              %small{"ng-cloak" => "", "class"=>"ng-cloak"} {{ trip.startDate | date:'yyyy-MM-dd' }}
            %datetimepicker{"data-datetimepicker-config" => "{ startView:'day', minView:'day' }", "data-ng-model" => "trip.startDate", "data-on-set-time"=>"onStartTimeSet(newDate, oldDate)"}
          .col-md-6
            %h2
              = t("EndDate")
              %small{"ng-cloak" => "", "class"=>"ng-cloak"} {{ trip.endDate | date:'yyyy-MM-dd' }}
            %datetimepicker{"data-datetimepicker-config" => "{ startView:'day', minView:'day' }", "data-ng-model" => "trip.endDate", "data-on-set-time"=>"onEndTimeSet(newDate, oldDate)"}
      .description
        %h2
          = t('Description')
          %button.btn.btn-success.save-description{"type" => "button", "ng-click" => "saveDescription()"}= t("Save")
        .content.editable{"ng-bind-html" => "trip.description", "ng-model" => "trip.description"}
        / %p {{trip.image.url}}
      %hr/
      .budget{"ng-controller" => "budgetCtrl" }
        %h2= t('Budget')
        .row
          .col-md-6
            %h4= t('BudgetElements')
            %table.table.table-hover
              %thead
                %tr
                  %th= t('Item')
                  %th= t('Units')
                  %th= t('PriceUnit')
                  %th= t('Cost')
                  %th
              %tbody{"ng-cloak" => "", "class"=>"ng-cloak"}
                %tr{"ng-repeat" => "budget in budgets"}

                  %div
                    %td
                      %div{"ng-hide" => "budget.editing"}
                        {{budget.description}}
                        %span.label.label-danger{"ng-if" => "budget.category === 1"}= t('transport')
                        %span.label.label-success{"ng-if" => "budget.category === 2"}= t('food')
                        %span.label.label-primary{"ng-if" => "budget.category === 3"}= t('sleep')
                        %span.label.label-warning{"ng-if" => "budget.category === 4"}= t('others')
                      %div{"ng-show" => "budget.editing"}
                        %input.title{"type" => "text", "ng-model" => "budget.description"}/
                        %select.cat{"ng-model" => "budget.category", "ng-options"=>"category.id as category.name for category in categories"}
                    %td
                      %div{"ng-hide" => "budget.editing"}
                        {{budget.units | number}}
                      %div{"ng-show" => "budget.editing"}
                        %input.units{"type" => "number", "size" => "2", "value" => "0", "ng-model" => "budget.units"}/
                    %td
                      %div{"ng-hide" => "budget.editing"}
                        {{budget.priceperunit | currency:"€":2}}
                      %div{"ng-show" => "budget.editing"}
                        %input.price{"type" => "number", "step" => "0.50", "value" => "0", "ng-model" => "budget.priceperunit"}/

                    %td {{budget.units * budget.priceperunit | currency:"€":2}}
                    %td
                      %span{"ng-hide" => "budget.editing"}
                        %button.mod.glyphicon.glyphicon-pencil{"ng-click" => "toggleEditMode(budget)"}
                      %span{"ng-show" => "budget.editing"}
                        %button.mod.glyphicon.glyphicon-floppy-disk{"ng-click" => "modBudget(budget)"}
                      %button.destroy.glyphicon.glyphicon-remove{"ng-click" => "removeBudget(budget)"}
                %tr
                  %td
                    %input.title{"type" => "text", "ng-model" => "newbudget.description"}/
                    %select.cat{"ng-model" => "newbudget.category", "ng-options"=>"category.id as category.name for category in categories"}
                  %td
                    %input.units{"type" => "number", "size" => "2", "value" => "0", "ng-model" => "newbudget.units", "ng-init" => "newbudget.units = 0"}/
                  %td
                    %input.price{"type" => "number", "step" => "0.50", "value" => "0", "ng-model" => "newbudget.priceperunit", "ng-init" => "newbudget.priceperunit = 0.00"}/
                  %td
                    %span {{newbudget.units * newbudget.priceperunit | currency:"€":2}}
                  %td
                    %button.btn.btn-primary{"type" => "button", "ng-click" => "addBudget(newbudget)"}= t("Add")
                %tr
                  %td TOTAL
                  %td
                  %td
                  %td
                  %td {{getTotal | currency:"€":2}}
          .col-md-6
            %highchart#chart1{:config => "highchartsNgConfig"}
      %hr/
      .extra
        .row
          .col-md-6{"ng-controller" => "stuffsCtrl" }


            %header
              %h3= t('Stuffs')
            %section
              %table.table.table-hover
                %thead
                  %tr
                    %th #
                    %th= t("Description")
                  %tr
                    %td.status
                      %div{"ng-show" => "isStuff()"}
                        %input#toggle-all.glyphicon.glyphicon-save{"ng-click" => "toggleMarkAll()", "ng-model" => "markAll", :type => "checkbox"}/
                    %td.text
                      %input#new{"ng-keyup" => "addStuff()", "ng-model" => "stuffText", :placeholder => t("WhatStuff"), :size => "30", :type => "text"}/
                %tbody{"ng-cloak" => "", "class"=>"ng-cloak"}
                  %tr{"ng-repeat" => "stuff in stuffs.slice().reverse()", "class" => "done-{{stuff.status}}"}
                    %td.status
                      %input.glyphicon.glyphicon-ok{"type" => "checkbox", "ng-model"=>"stuff.status", "ng-click" => "changeStatus(stuff)"}
                    %td.text{"ng-keyup"=>"editTodo()"}
                      %span{"ng-dblclick" => "toggleEditMode(stuff)", "ng-hide" => "stuff.editing"}  {{stuff.description}}
                      %input.edit{:autofocus => "", "ng-keyup" => "editOnEnter(stuff)", "ng-model" => "stuff.description", "ng-show" => "stuff.editing"}/


                      %button.mod.glyphicon.glyphicon-pencil{"ng-click" => "toggleEditMode(stuff)", "ng-hide" => "stuff.editing"}
                      %button.mod.glyphicon.glyphicon-floppy-disk{"ng-click" => "editOnEnter(stuff)","ng-show" => "stuff.editing"}

                      %button.destroy.glyphicon.glyphicon-remove{"ng-click" => "removeItem(stuff)"}
            %footer{"style"=>"display: block;","ng-cloak" => "", "class"=>"ng-cloak"}
              .container-fluid
                .todo-count
                  {{remaining()}} {{itemText()}}
                %button.clear-completed.btn.btn-primary.btn-xs{"ng-click"=>"clear()","ng-show"=>"hasDone()"}
                  = t("ClearCompleted")
                  %span ({{(stuffs.length - remaining())}})

          .col-md-6{"ng-controller" => "tasksCtrl"}
            %header
              %h3= t('ToDo')
            %section
              %table.table.table-hover
                %thead
                  %tr
                    %th #
                    %th= t("Description")
                  %tr
                    %td.status
                      %div{"ng-show" => "isTask()"}
                        %input#toggle-all.glyphicon.glyphicon-save{"ng-click" => "toggleMarkAll()", "ng-model" => "markAll", :type => "checkbox"}/
                    %td.text
                      %input#new{"ng-keyup" => "addTask()", "ng-model" => "taskText", :placeholder => t("WhatTask"), :size => "30", :type => "text"}/
                %tbody{"ng-cloak" => "", "class"=>"ng-cloak"}
                  %tr{"ng-repeat" => "task in tasks.slice().reverse()", "class" => "done-{{task.status}}"}
                    %td.status
                      %input.glyphicon.glyphicon-ok{"type" => "checkbox", "ng-model"=>"task.status", "ng-click" => "changeStatus(task)"}
                    %td.text{"ng-keyup"=>"editTodo()"}
                      %span{"ng-dblclick" => "toggleEditMode(task)", "ng-hide" => "task.editing", "ng-bind-html"=>"task.description"}
                      %input.edit{:autofocus => "", "ng-keyup" => "editOnEnter(task)", "ng-model" => "task.description", "ng-show" => "task.editing"}/

                      %button.mod.glyphicon.glyphicon-pencil{"ng-click" => "toggleEditMode(task)", "ng-hide" => "task.editing"}
                      %button.mod.glyphicon.glyphicon-floppy-disk{"ng-click" => "editOnEnter(task)","ng-show" => "task.editing"}

                      %button.destroy.glyphicon.glyphicon-remove{"ng-click" => "removeItem(task)"}
            %footer{"style"=>"display: block;","ng-cloak" => "", "class"=>"ng-cloak"}
              .container-fluid
                .todo-count
                  {{remaining()}} {{itemText()}}
                %button.clear-completed.btn.btn-primary.btn-xs{"ng-click"=>"clear()","ng-show"=>"hasDone()"}
                  = t("ClearCompleted")
                  %span ({{(tasks.length - remaining())}})
  / Footer
  %section#social
    .container-fluid
      %div
        %ul.list-inline
          %li= t("Share:")
          %li
            = link_to share_url("facebook","http://planificaviajes.herokuapp.com/t/{{trip.key}}") do
              %i.fa.fa-facebook-square.fa-2x
          %li
            = link_to share_url("twitter","http://planificaviajes.herokuapp.com/t/{{trip.key}}") do
              %i.fa.fa-twitter-square.fa-2x